// types.ts

// A single skill endorsement (on-chain)
export interface Skill {
    name: string;
    totalEndorsements: number;
    expertEndorsements: number;
    isExpert: boolean;
  }
  
  // Public profile data, stored off-chain (Privy or IPFS)
  export interface PublicUserProfile {
    username: string;
    bio?: string;
    avatarCID?: string;
    links?: {
      github?: string;
      x?: string;
      telegram?: string;
      website?: string;
    };
  }
  
  // The core contact memory ("Polaroid")
  export interface ConnectionPolaroid {
    id?: string; // Optional: generated by DB
    from_address: string;
    to_address: string;
    photo_url: string;
    note?: string;
    timestamp?: string; // ISO string or undefined
    event_organizer?: string;
    event?: string;
    tags?: string[];
  }
  
  // Optional type for post-aggregated profile+skills per contact
  export interface EnrichedContact {
    polaroid: ConnectionPolaroid;
    profile: PublicUserProfile;
    skills: Skill[];
  }
  
  // Super endorsement for matrix position
  export interface SuperEndorsement {
    endorser: string;
    x: number;
    y: number;
    message?: string;
    profileURI?: string;
  }
  
  // 4x4 grid of super endorsements
  export type SuperEndorsementMatrix = (SuperEndorsement | null)[];
  